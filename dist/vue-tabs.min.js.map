{"version":3,"file":null,"sources":["../src/components/VueTabs.js","../src/components/VTab.js","../src/index.js"],"sourcesContent":["export default{\n    name: 'vue-tabs',\n    props: {\n        activeTabColor: String,\n        activeTextColor: String,\n        /**\n         * Tab title position: center | bottom | top\n         */\n        textPosition: {\n            type: String,\n            default: 'center'\n        },\n        /**\n         * Tab type: tabs | pills\n         */\n        type: {\n            type: String,\n            default: 'tabs'\n        },\n        direction: {\n            type: String,\n            default: 'horizontal'\n        },\n        /**\n         * Centers the tabs and makes the container div full width\n         */\n        centered: Boolean,\n        value: [String, Number, Object]\n    },\n    data () {\n        return {\n            activeTabIndex: 0,\n            tabs: []\n        }\n    },\n    computed: {\n        isTabShape () {\n            return this.type === 'tabs'\n        },\n        isStacked () {\n            return this.direction === 'vertical'\n        },\n        classList () {\n            let navType = this.isTabShape ? 'nav-tabs' : 'nav-pills'\n            let centerClass = this.centered ? 'nav-justified' : ''\n            let isStacked = this.isStacked ? 'nav-stacked' : ''\n            return `nav ${navType} ${centerClass} ${isStacked}`\n        },\n        stackedClass () {\n            return this.isStacked ? 'stacked' : ''\n        },\n        activeTabStyle () {\n            return {\n                backgroundColor: this.activeTabColor,\n                color: this.activeTextColor\n            }\n        }\n    },\n    methods: {\n        navigateToTab (index, route) {\n            this.changeTab(this.activeTabIndex, index, route)\n        },\n        activateTab (index) {\n            this.activeTabIndex = index\n            let tab = this.tabs[index]\n            tab.active = true\n            this.$emit('input', tab.title)\n        },\n        changeTab (oldIndex, newIndex, route) {\n            this.activeTabIndex = newIndex\n            this.tabs[oldIndex].active = false\n            this.tabs[newIndex].active = true\n            this.$emit('input', this.tabs[newIndex].title)\n            this.$emit('tab-change', oldIndex, newIndex)\n            this.tryChangeRoute(route)\n        },\n        tryChangeRoute (route) {\n            if (this.$router && route) {\n                this.$router.push(route)\n            }\n        },\n        addTab(item) {\n            const index = this.$slots.default.indexOf(item.$vnode);\n            this.tabs.splice(index, 0, item);\n        },\n        removeTab(item) {\n            const tabs = this.tabs;\n            const index = tabs.indexOf(item);\n            if (index > -1) {\n                tabs.splice(index, 1);\n            }\n        },\n        getTabs () {\n            if (this.$slots.default) {\n                return this.$slots.default.filter(comp => comp.componentOptions)\n            }\n            return []\n        },\n        findTabAndActivate (tabName) {\n            let indexToActivate = this.tabs.findIndex(tab => tab.title === tabName)\n            if (indexToActivate != -1) {\n                this.changeTab(this.activeTabIndex, indexToActivate)\n            } else {\n                this.changeTab(this.activeTabIndex, 0)\n            }\n        },\n        renderTabTitle (index, position = 'top') {\n            if (this.tabs.length === 0) return\n            let tab = this.tabs[index]\n            let {active, title} = tab\n            let titleStyles = {color: this.activeTabColor}\n            if(position === 'center') titleStyles.color = this.activeTextColor\n            let simpleTitle = (<span class={`title title_${position}`} style={active ? titleStyles : {}}>\n                                    {title}\n                                  </span> )\n\n            if (tab.$slots.title && position === 'center') return tab.$slots.title\n            return simpleTitle\n        },\n        renderIcon (index) {\n            if (this.tabs.length === 0) return\n            let tab = this.tabs[index]\n            let {icon} = tab\n            let simpleIcon =  <i class={icon}></i>\n            if(!tab.$slots.title) return simpleIcon\n        },\n        renderTabs () {\n            return this.tabs.map((tab, index) => {\n                if (!tab) return\n                let {route, id, title, icon} = tab\n                let active = this.activeTabIndex === index\n                return (\n                    <li name=\"tab\" onClick={() => this.navigateToTab(index, route)} class={['tab', {active: active}]}\n                        key={title}\n                        role=\"presentation\">\n                        {this.textPosition === 'top' &&\n                          this.renderTabTitle(index, this.textPosition)\n                        }\n                        <a href={`#${tab.id}`}\n                           onClick={() => this.navigateToTab(index)}\n                           style={active ? this.activeTabStyle : {}}\n                           aria-selected={active}\n                           aria-controls={`#${id}`}\n                           role=\"tab\">\n                            {!tab.$slots.title &&\n                                this.renderIcon(index)\n                            }\n                            {this.textPosition === 'center' &&\n                               this.renderTabTitle(index, this.textPosition)\n                            }\n                        </a>\n                        {this.textPosition === 'bottom' &&\n                        this.renderTabTitle(index, this.textPosition)\n                        }\n                    </li>\n                )\n            })\n        }\n    },\n    render () {\n        const tabList = this.renderTabs()\n        return (<div class={['vue-tabs', this.stackedClass]}>\n            <ul class={this.classList} role=\"tablist\">\n                {tabList}\n            </ul>\n            <div class=\"tab-content\">\n                {this.$slots.default}\n            </div>\n        </div>)\n    },\n    watch: {\n        tabs: function (newList) {\n            if (newList.length > 0 && !this.value) {\n                this.activateTab(this.activeTabIndex)\n            }\n            if (newList.length > 0 && this.value) {\n                this.findTabAndActivate(this.value)\n            }\n        }\n    },\n    value: function (newVal) {\n        this.findTabAndActivate(newVal)\n    }\n}\n","export default{\r\n    name: 'v-tab',\r\n    props: {\r\n        title: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        icon: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        /***\r\n         * Function to execute before tab switch. Return value must be boolean\r\n         * If the return result is false, tab switch is restricted\r\n         */\r\n        beforeChange: {\r\n            type: Function\r\n        },\r\n        id: String,\r\n        route: {\r\n            type: [String, Object]\r\n        },\r\n        transitionName: String,\r\n        transitionMode: String\r\n    },\r\n    computed: {\r\n        isValidParent () {\r\n            return this.$parent.$options.name === 'vue-tabs'\r\n        },\r\n        hash () {\r\n            return `#${this.id}`\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            active: false,\r\n            validationError: null\r\n        }\r\n    },\r\n    mounted(){\r\n      this.$parent.addTab(this)\r\n    },\r\n    destroyed() {\r\n        if (this.$el && this.$el.parentNode) {\r\n            this.$el.parentNode.removeChild(this.$el);\r\n        }\r\n        this.$parent.removeTab(this);\r\n    },\r\n    render () {\r\n        return ( <section class=\"tab-container\"\r\n                          role=\"tabpanel\" v-show={this.active}>\r\n            {this.$slots.default}\r\n        </section>)\r\n    }\r\n}\r\n","import VueTabs from './components/VueTabs.js'\nimport VTab from './components/VTab.js'\nconst VueTabsPlugin = {\n  install(Vue) {\n    Vue.component('vue-tabs', VueTabs)\n    Vue.component('v-tab', VTab)\n  }\n}\n// Automatic installation if Vue has been added to the global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueTabsPlugin)\n}\nexport default VueTabsPlugin\nexport {\n    VueTabs,\n    VTab\n}"],"names":["String","Boolean","Number","Object","this","type","direction","isTabShape","centered","isStacked","activeTabColor","activeTextColor","index","route","changeTab","activeTabIndex","tab","tabs","active","$emit","title","oldIndex","newIndex","tryChangeRoute","$router","push","item","$slots","default","indexOf","$vnode","splice","filter","comp","componentOptions","tabName","indexToActivate","findIndex","position","length","titleStyles","color","simpleTitle","h","class","style","icon","simpleIcon","map","id","_this","name","navigateToTab","textPosition","renderTabTitle","href","activeTabStyle","renderIcon","tabList","renderTabs","stackedClass","classList","role","newList","value","activateTab","findTabAndActivate","newVal","Function","$parent","$options","addTab","$el","parentNode","removeChild","removeTab","VueTabsPlugin","Vue","component","VueTabs","VTab","window","use"],"mappings":"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"}